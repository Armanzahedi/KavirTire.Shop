version: '3.4'

services:
  nginxx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - kavirtireshop
    networks:
      - kavirtire
    ports:
      - "80:4000"
  
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always
    networks:
      - kavirtire
  
  nginxexp:
    image: nginx/nginx-prometheus-exporter
    depends_on:
      - nginxx
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri
      - http://nginxx:4000/stub_status
    restart: always
    networks:
      - kavirtire
  
  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - kavirtire
  
  kavirtireshop:
    image: kavirtireshop
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    build:
      context: .
      dockerfile: KavirTire.Shop.Presentation/Dockerfile
    expose:
      - "80"
    depends_on:
      - redis
    networks:
      - kavirtire
    deploy:
      replicas: 1
  
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ./redis-data:/data
    command: redis-server
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - kavirtire



networks:
  kavirtire:
    driver: bridge
volumes:
  grafana_data: {}